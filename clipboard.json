[
    "![最好用的五笔输入法](https:\/\/github.com\/KyleBing\/rime-wubi86-jidan\/blob\/master\/imgs\/main.gif)",
    "\/storage\/emulated\/0\/DCIM\/ScreenRecorder\/Screenrecorder-2020-03-06-15-25-11-629.mp4\n",
    "clip_board: {label: 剪切板, send: Control+Shift+v}",
    "com.miui.screenrecorder",
    "261203",
    "858722",
    ":let i = 1 :while i < 5 : echo \"count is\" i : let i += 1 :endwhile",
    "Control+a",
    "sudo -H pip install --upgrade youtube-dl",
    ":.,\/^$\/-1!sort",
    "OBJS = \\\nversion.o \\ pch.o \\ getopt.o \\ util.o \\ getopt1.o \\ inp.o \\ patch.o \\ backup.o",
    "https:\/\/m.youtube.com\/watch?v=Ai0ZTH_-JFY",
    ":%s\/\\([^,]*\\), \\(.*\\)\/\\2 \\1\/",
    "cloud.dict.yaml\n",
    "clipboard.json\n",
    "wubi86_jidian_user.dict.yaml\n",
    "phrase.json\n",
    "ความเหงา",
    "‮",
    "chrome:\/\/newtab\/",
    "text: \"{Control+a}{BackSpace}\"}",
    "🇺🇸",
    "🇨🇳",
    "U+1F1E8",
    "key_hint_offset_y",
    "#bac2c6",
    "#606c70",
    "#ebedec",
    "#a2a9af",
    "Copied!",
    "#CCCCCC",
    "#EFEFEF",
    "stdio.h fcntl.h unistd.h stdlib.h",
    "“疫情就像照妖镜。”是的，\n它照出了世道人心，\n照出了是非善恶，\n照出了一个人到底是丑陋还是光明\nmy name is youan.",
    ":set modifiable",
    "im.rotate(45).show()",
    "draw = ImageDraw.Draw(image)",
    "# 输出文字:\nfor t in range(4):\n    draw.text((60 * t + 10, 10), rndChar(), font=font, fill=rndColor2())\n# 模糊:\nimage = image.filter(ImageFilter.BLUR)\nimage.save('code.jpg', 'jpeg')",
    ":runtime syntax\/colortest.vim",
    "draw.text((10, 25), \"world\", font=font)",
    "很多网友都说，“疫情就像照妖镜。”是的，它照出了世道人心，照出了是非善恶，照出了一个人到底是丑陋还是光明。\n\n我们敬佩那些有专业精神，兢兢业业地做贡献的人，他们是独行的勇士。\n\n我们称赞那些心有大爱，内心温暖的人，他们是人类风雨同舟的桥梁。\n\n我们看清了那些为了一己私欲，不顾规则的人，他们也为此付出了代价。\n\n抗击疫情到了攻坚期，更需要所有人的同心协力。如张文宏医生所说：“一是耐心，二是信心。”\n\n相信未来，相信阴霾终会散去。",
    ":set listchars=tab:>-,trail:-",
    "Hello there. This is an example. Just some text.",
    "ffmpeg -threads2 -y -r 10 -i \/tmpdir\/image%04d.jpg -i audio.mp3 -absf aac_adtstoasc output.mp4",
    " - {click: Mode_switch, long_click: Candidate_switch, width: 12 ,has_menu: select_third}",
    "Mode_switch: {toggle: ascii_mode, send: Mode_switch, functional: false}",
    "besos",
    "คิดถึง",
    "么么哒",
    "จุ๊บ",
    "font = ImageFont.truetype",
    "font = ImageFont.truetype('simsun.ttc',24) # 创建一个font对象并指定大小\nbase = Image.open('e3.jpg').convert('RGBA') # 打开一个图片，并将其转换为RGBA模式\ntxt = Image.new('RGBA', base.size, (255,255,255,0)) #创建文本image 白底透明\ntext = \"你好！\"\ndraw = ImageDraw.Draw(txt) # 创建一个可绘画得image对象\ndraw.text((20, 20),text, fill=(255,255,255),font=font) \nout = Image.alpha_composite(base, txt)\n\nout.show()",
    "im2 = im.filter(ImageFilter.CONTOUR)",
    "im1 = im.filter(ImageFilter.BLUR)\n\nim2 = im.filter(ImageFilter.MinFilter(3))\nim3 = im.filter(ImageFilter.MinFilter)",
    "ImageFilter.BLUR 模糊滤镜\nImageFilter.CONTOUR 轮廓\nImageFilter.EDGE_ENHANCE 边界加强\nImageFilter.EDGE_ENHANCE_MORE 边界加强(阀值更大)\nImageFilter.EMBOSS 浮雕滤镜\nImageFilter.FIND_EDGES 边界滤镜\nImageFilter.SMOOTH 平滑滤镜\nImageFilter.SMOOTH_MORE 平滑滤镜(阀值更大)\nImageFilter.SHARPEN 锐化滤镜",
    "font = ImageFont.truetype(\"arial.ttf\", 15)",
    "draw.text((10, 10), \"hello\", font=font)",
    "syht-Bold.otf\n",
    "# 240 x 60:\nwidth = 60 * 4\nheight = 60\nimage = Image.new('RGB', (width, height), (255, 255, 255))\n# 创建Font对象:\nfont = ImageFont.truetype('Arial.ttf', 36)\n# 创建Draw对象:\ndraw = ImageDraw.Draw(image)\n# 填充每个像素:\nfor x in range(width):\n    for y in range(height):\n        draw.point((x, y), fill=rndColor())",
    "# 随机颜色2:\ndef rndColor2():\n    return (random.randint(32, 127), random.randint(32, 127), random.randint(32, 127))\n",
    "# 随机颜色1:\ndef rndColor():\n    return (random.randint(64, 255), random.randint(64, 255), random.randint(64, 255))",
    "# 随机字母:\ndef rndChar():\n    return chr(random.randint(65, 90))",
    "im2 = im.filter(ImageFilter.BLUR)",
    "ImageFilter",
    "# 缩放到50%:\nim.thumbnail((w\/\/2, h\/\/2))\nprint('Resize image to: %sx%s' % (w\/\/2, h\/\/2))\n# 把缩放后的图像用jpeg格式保存:",
    "im.thumbnail((w\/\/2, h\/\/2))\nprint('Resize image to: %sx%s' % (w\/\/2, h\/\/2))\n# 把缩放后的图像用jpeg格式保存:\nim.save('thumbnail.jpg', 'jpeg')",
    "draw = ImageDraw.Draw(im)\ndraw.line((0, 0) + im.size, fill=128)\ndraw.line((0, im.size[1], im.size[0], 0), fill=128)\ndel draw\n\n# write to stdout\nim.save(sys.stdout, \"PNG\")",
    "with Image.open(\"hopper.ppm\") as im:\n    title = \"hopper\"\n    box = (1*72, 2*72, 7*72, 10*72) # in points\n\n    ps = PSDraw.PSDraw() # default is sys.stdout\n    ps.begin_document(title)\n\n    # draw the image (75 dpi)\n    ps.image(box, im, 75)\n    ps.rectangle(box)\n\n    # draw title\n    ps.setfont(\"HelveticaNarrow-Bold\", 36)\n    ps.text((3*72, 4*72), title)\n\n    ps.end_document()",
    "PSDraw",
    "AttributeError: 'str' object has no attribute 'size'",
    "os.path.join",
    "os.path.split(os.path.realpath(__file__))[0]",
    "import os",
    "Pillow",
    "# 阅读\nbook_x = title_x + 5\nbook_start_y = title_y - 190\nbook_y = 0\nbook_line = 50\nfor num, book in enumerate(books):\n    y = book_start_y - num * book_line\n    book_num = num + 1\n    draw.text((book_x, height - y), u'%s. %s' % (book_num, book), color, font)\n\n作者：it书童\n链接：https:\/\/www.jianshu.com\/p\/2698af6c5892\n來源：简书\n简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。",
    "# 当前时间\ncur_time = time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime())\ncur_time_x = 590\ncur_time_y = title_y - 25\ncur_time_font = ImageFont.truetype(font_type, 25)\ndraw.text((cur_time_x, height - cur_time_y), u'%s' % cur_time, color, cur_time_font)\n\n作者：it书童\n链接：https:\/\/www.jianshu.com\/p\/2698af6c5892\n來源：简书\n简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。",
    "# 标题\ntitle_x = header_x\ntitle_y = header_y - 80\ndraw.text((title_x, height - title_y), u'%s' % title, color, title_font)\n",
    "# header头\nheader_x = 130\nheader_y = 690\ndraw.text((header_x, height - header_y), u'%s' % header, color, header_font)\n",
    "# 打开图片\nimage = Image.open(img)\ndraw = ImageDraw.Draw(image)\nwidth, height = image.size",
    "color = \"#000000\"",
    "# 图片名称\nimg = '.\/test.png'  # 图片模板\nnew_img = 'text.png'  # 生成的图片\ncompress_img = 'compress.png'  # 压缩后的图片",
    "summary_list = [summary[i:i + n] for i in range(0, len(summary), n)]",
    "header = '001'\ntitle = '日思录第001篇'\nbooks = ['中国史纲五十讲', '再见拖延症', '心流']\nwrites = ['日思录第001篇', 'python给图片加文字']\nsummary = '习惯在一个任务开始之前，先给自己设立一个看起来不太可能达到的完美标准，并因为这个标准而迟迟无法动手，那你可能也是一个完美主义者'\nn = 18\n\n作者：it书童\n链接：https:\/\/www.jianshu.com\/p\/2698af6c5892\n來源：简书\n简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。",
    ":set compatible?",
    "Plug 'yianwillis\/vimcdoc'",
    "flypy:",
    "tantsing:",
    "# vim: set sw=2 sts=2 et:",
    "❺",
    "❹",
    "❸",
    "aqua",
    "preset_color_schemes",
    "preset_color_schemes:\n  default:\n    name: 默认／default #方案名稱\n ",
    "$PWD\/**",
    "_Keyboard_candidate",
    "com.osfans.trime.accessibility",
    "_phrase_board",
    "文本",
    "🎤",
    "蛀",
    "hghghgjhjhghghgdgyty",
    "_add_phrase",
    "CommitRawInput",
    "编码",
    "proximity_correction",
    "color_scheme",
    "background_dim_amount",
    "_Keyboard_phrase",
    "_Keyboard_clip",
    "_clip_board",
    "popup: [Menu, _Keyboard_clip, _Keyboard_phrase]}",
    "_Keyboard_edit",
    "编辑"
]