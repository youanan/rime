# Rime default settings
# encoding: utf-8

config_version: 0.36.custom.3391806683
customization: 3391806683

schema_list:
  - schema: flypyplus
  - schema: flypy

switcher:
  caption: 〔方案选择〕
  hotkeys:
    - Control+grave
    - Control+Shift+grave
    - F4
  save_options:
    - ascii_mode
    - _hide_key_hint
    - _hide_candidate
    - _hide_comment
    # - full_shape
    # - ascii_punct
    # - simplification
    # - extended_charset
    # - zh_hant
    # - zh_hans
    # - zh_hant_tw
  # fold_options: true
  # abbreviate_options: true
  # option_list_separator: '／'

menu:
  page_size: 5

punctuator:
  full_shape:
    ' ' : { commit: '　' }
    ',' : { commit: ， }
    '.' : { commit: 。 }
    '<' : [ 《, 〈, «, ‹ ]
    '>' : [ 》, 〉, », › ]
    '/' : [ ／, ÷ ]
    '?' : { commit: ？ }
    ';' : { commit: ； }
    ':' : { commit: ： }
    '''' : { pair: [ '‘', '’' ] }
    '"' : { pair: [ '“', '”' ] }
    '\' : [ 、, ＼ ]
    '|' : [ ·, ｜, '§', '¦' ]
    '`' : ｀
    '~' : ～
    '!' : { commit: ！ }
    '@' : [ ＠, ☯ ]
    '#' : [ ＃, ⌘ ]
    '%' : [ ％, '°', '℃' ]
    '$' : [ ￥, '$', '€', '£', '¥', '¢', '¤' ]
    '^' : { commit: …… }
    '&' : ＆
    '*' : [ ＊, ·, ・, ×, ※, ❂ ]
    '(' : （
    ')' : ）
    '-' : －
    '_' : ——
    '+' : ＋
    '=' : ＝
    '[' : [ 「, 【, 〔, ［ ]
    ']' : [ 」, 】, 〕, ］ ]
    '{' : [ 『, 〖, ｛ ]
    '}' : [ 』, 〗, ｝ ]
  half_shape:
    ',' : { commit: ， }
    '.' : { commit: 。 }
    '<' : [ 《, 〈, «, ‹ ]
    '>' : [ 》, 〉, », › ]
    '/' : [ 、, '/', ／, ÷ ]
    '?' : { commit: ？ }
    ';' : { commit: ； }
    ':' : { commit: ： }
    '''' : { pair: [ '‘', '’' ] }
    '"' : { pair: [ '“', '”' ] }
    '\' : [ 、, '\', ＼ ]
    '|' : [ ·, '|', ｜, '§', '¦' ]
    '`' : '`'
    '~' : [ '~', ～ ]
    '!' : { commit: ！ }
    '@' : '@'
    '#' : '#'
    '%' : [ '%', ％, '°', '℃' ]
    '$' : [ ￥, '$', '€', '£', '¥', '¢', '¤' ]
    '^' : { commit: …… }
    '&' : '&'
    '*' : [ '*', ＊, ·, ・, ×, ※, ❂ ]
    '(' : （
    ')' : ）
    '-' : '-'
    '_' : ——
    '+' : '+'
    '=' : '='
    '[' : [ 「, 【, 〔, ［ ]
    ']' : [ 」, 】, 〕,  ］ ]
    '{' : [ 『, 〖, ｛ ]
    '}' : [ 』, 〗, ｝ ]
  ascii_style:
    ',' : { commit: ',' }
    '.' : { commit: '.' }
    '<' : '<'
    '>' : '>'
    '/' : '/'
    '?' : { commit: '?' }
    ';' : { commit: ';' }
    ':' : { commit: ':' }
    "'" : "'"
    '"' : '"'
    '\' : '\'
    '|' : '|'
    '`' : '`'
    '~' : '~'
    '!' : { commit: '!' }
    '@' : '@'
    '#' : '#'
    '%' : '%'
    '$' : '$'
    '^' : '^'
    '&' : '&'
    '*' : '*'
    '(' : '('
    ')' : ')'
    '-' : '-'
    '_' : '_'
    '+' : '+'
    '=' : '='
    '[' : '['
    ']' : ']'
    '{' : '{'
    '}' : '}'

key_binder:
  bindings:
  # Emacs editing
    - { when: composing, accept: Control+p, send: Up }
    - { when: composing, accept: Control+n, send: Down }
    - { when: composing, accept: Control+b, send: Left }
    - { when: composing, accept: Control+f, send: Right }
    - { when: composing, accept: Control+a, send: Home }
    - { when: composing, accept: Control+e, send: End }
    - { when: composing, accept: Control+d, send: Delete }
    - { when: composing, accept: Control+k, send: Shift+Delete }
    - { when: composing, accept: Control+h, send: BackSpace }
    - { when: composing, accept: Control+g, send: Escape }
    - { when: composing, accept: Control+bracketleft, send: Escape }
    - { when: composing, accept: Alt+v, send: Page_Up }
    - { when: composing, accept: Control+v, send: Page_Down }
  # Move by word with tab
    - { when: composing, accept: ISO_Left_Tab, send: Shift+Left }
    - { when: composing, accept: Shift+Tab, send: Shift+Left }
    - { when: composing, accept: Tab, send: Shift+Right }
  # Paging with minus equal
    - { when: has_menu, accept: minus, send: Page_Up }
    - { when: has_menu, accept: equal, send: Page_Down }
  # Paging with comma period
    - { when: paging, accept: comma, send: Page_Up }
    - { when: has_menu, accept: period, send: Page_Down }
  # Paging with brackets
    - { when: paging, accept: bracketleft, send: Page_Up }
    - { when: has_menu, accept: bracketright, send: Page_Down }
  # Numbered mode switch
    - { when: always, accept: Control+Shift+1, select: .next }
    - { when: always, accept: Control+Shift+2, toggle: ascii_mode }
    - { when: always, accept: Control+Shift+3, toggle: full_shape }
    - { when: always, accept: Control+Shift+4, toggle: simplification }
    - { when: always, accept: Control+Shift+5, toggle: extended_charset }
    - { when: always, accept: Control+Shift+exclam, select: .next }
    - { when: always, accept: Control+Shift+at, toggle: ascii_mode }
    - { when: always, accept: Control+Shift+numbersign, toggle: full_shape }
    - { when: always, accept: Control+Shift+dollar, toggle: simplification }
    - { when: always, accept: Control+Shift+percent, toggle: extended_charset }
  # Windows compatible mode switch
    # - { when: always, accept: Shift+space, toggle: full_shape }
    # - { when: always, accept: Control+period, toggle: ascii_punct }
  # Optimized mode switch
    # - { when: always, accept: Control+Shift+space, select: .next }
    # - { when: always, accept: Shift+space, toggle: ascii_mode }
    # - { when: always, accept: Control+comma, toggle: full_shape }
    # - { when: always, accept: Control+period, toggle: ascii_punct }
    # - { when: always, accept: Control+slash, toggle: simplification }
    # - { when: always, accept: Control+backslash, toggle: extended_charset }
  # Others
    - { when: composing, accept: Caps_Lock, send: Escape }

recognizer:
  patterns:
    # email: "^[A-Za-z][-_.0-9A-Za-z]*@.*$"
    uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"
    # url: "^(www[.]|https?:|ftp[.:]|mailto:|file:).*$|^[a-z]+[.].+$"
    reverse_lookup: "[a-z`]*`+[a-z`]*"
    punct: ""

ascii_composer:
  good_old_caps_lock: true
  switch_key:
    Caps_Lock: Escape 
    Control_L: noop
    Control_R: noop
    Eisu_toggle: clear
    Shift_L: inline_ascii # 有编码时清除编码并进入英文状态
    # Shift_L: commit_code # 有编码时上屏英文并转英文状态
    # Shift_L: commit_text
    # Shift_L: Shift_R
    # Shift_L: noop
    Shift_R: inline_ascii # 有编码时清除编码并进入英文状态
    # Shift_R: commit_code # 有编码时上屏英文并转英文状态
    # Shift_R: commit_text
    # Shift_R: Shift_L
    # Shift_R: noop
